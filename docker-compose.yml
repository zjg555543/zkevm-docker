version: "3.5"
networks:
  default:
    name: supernets2 
services:
  supernets2-sequencer:
    container_name: supernets2-sequencer 
    image: supernets2-node
    ports:
      - 9092:9091 # needed if metrics enabled
      - 6060:6060
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db 
      - SUPERNETS2_NODE_POOL_DB_HOST=supernets2-pool-db
    volumes:
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components sequencer"

  supernets2-json-rpc:
    container_name: supernets2-json-rpc
    image: supernets2-node
    ports:
      - 8123:8123
      - 8133:8133 # needed if WebSockets enabled
      - 9091:9091 # needed if metrics enabled
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
      - SUPERNETS2_NODE_POOL_DB_HOST=supernets2-pool-db
    volumes:
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components rpc"

  supernets2-aggregator:
    container_name: supernets2-aggregator
    image: supernets2-node
    ports:
      - 50081:50081
      - 9093:9091 # needed if metrics enabled
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
    volumes:
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components aggregator"

  supernets2-sync:
    container_name: supernets2-sync
    image: supernets2-node
    ports:
      - 9095:9091 # needed if metrics enabled
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
    volumes:
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components synchronizer"

  supernets2-state-db:
    container_name: supernets2-state-db
    image: postgres
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5432:5432
    volumes:
      - ./config/init_prover_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_password
      - POSTGRES_DB=state_db
    command:
      - "postgres"
      - "-N"
      - "500"

  supernets2-pool-db:
    container_name: supernets2-pool-db
    image: postgres
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=pool_user
      - POSTGRES_PASSWORD=pool_password
      - POSTGRES_DB=pool_db
    command:
      - "postgres"
      - "-N"
      - "500"

  supernets2-event-db:
    container_name: supernets2-event-db
    image: postgres
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5435:5432
    volumes:
      - ./config/init_event_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=event_user
      - POSTGRES_PASSWORD=event_password
      - POSTGRES_DB=event_db
    command:
      - "postgres"
      - "-N"
      - "500"

  supernets2-explorer-l1:
    container_name: supernets2-explorer-l1
    image: hermeznetwork/zkevm-explorer:latest
    ports:
      - 4000:4000
    environment:
      - NETWORK=ETH
      - SUBNETWORK=Local Ethereum
      - COIN=ETH
      - ETHEREUM_JSONRPC_VARIANT=geth
      - ETHEREUM_JSONRPC_HTTP_URL=http://zkevm-mock-l1-network:8545
      - DATABASE_URL=postgres://state_user:state_password@zkevm-state-db:5432/l1_explorer_db
      - ECTO_USE_SSL=false
      - MIX_ENV=prod
    command:
      [
        "/bin/sh",
        "-c",
        "mix do ecto.create, ecto.migrate; mix phx.server"
      ]

  supernets2-explorer-l2:
    container_name: supernets2-explorer-l2
    image: hermeznetwork/zkevm-explorer:latest
    ports:
      - 4001:4000
    environment:
      - NETWORK=POE
      - SUBNETWORK=Polygon Hermez
      - COIN=ETH
      - ETHEREUM_JSONRPC_VARIANT=geth
      - ETHEREUM_JSONRPC_HTTP_URL=http://zkevm-explorer-json-rpc:8124
      - DATABASE_URL=postgres://state_user:state_password@zkevm-state-db:5432/l2_explorer_db
      - ECTO_USE_SSL=false
      - MIX_ENV=prod
      - INDEXER_DISABLE_INTERNAL_TRANSACTIONS_FETCHER=true
      - LOGO=/images/blockscout_logo.svg
      - LOGO_FOOTER=/images/blockscout_logo.svg
    command:
      [
        "/bin/sh",
        "-c",
        "mix do ecto.create, ecto.migrate; mix phx.server"
      ]

  supernets2-explorer-json-rpc:
    container_name: supernets2-explorer-json-rpc
    image: supernets2-node
    ports:
      - 8124:8124
      - 8134:8134 # needed if WebSockets enabled
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
      - SUPERNETS2_NODE_POOL_DB_HOST=supernets2-pool-db
      - SUPERNETS2_NODE_RPC_PORT=8124
      - SUPERNETS2_NODE_RPC_WEBSOCKETS_PORT=8134
    volumes:
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components rpc --http.api eth,net,debug,supernets2,txpool,web3"

  supernets2-mock-l1-network:
    container_name: supernets2-mock-l1-network
    image: hermeznetwork/geth-zkevm-contracts:v1.1.0-fork.4
    ports:
      - 8545:8545
      - 8546:8546
    command:
      - "--http"
      - "--http.api"
      - "admin,eth,debug,miner,net,txpool,personal,web3"
      - "--http.addr"
      - "0.0.0.0"
      - "--http.corsdomain"
      - "*"
      - "--http.vhosts"
      - "*"
      - "--ws"
      - "--ws.origins"
      - "*"
      - "--ws.addr"
      - "0.0.0.0"
      - "--dev"
      - "--datadir"
      - "/geth_data"
      - "--syncmode"
      - "full"
      - "--rpc.allow-unprotected-txs"

  supernets2-prover:
    container_name: supernets2-prover
    image: hermeznetwork/zkevm-prover:v2.0.1
    ports:
      # - 50051:50051 # Prover
      - 50052:50052 # Mock prover
      - 50061:50061 # MT
      - 50071:50071 # Executor
    volumes:
      - ./config/test.prover.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json

  supernets2-approve:
    container_name: supernets2-approve
    image: supernets2-node
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
    volumes:
      - ./config/sequencer.keystore:/pk/keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node approve --network custom --custom-network-file /app/genesis.json --key-store-path /pk/keystore --pw testonly  --amount 1000000000000000000000000  --yes --cfg /app/config.toml"

  zkevm-bridge-service:
    container_name: zkevm-bridge-service
    image: zkevm-bridge-service
    ports:
      - 8080:8080
      - 9090:9090
    environment:
      - ZKEVM_BRIDGE_DATABASE_USER=test_user
      - ZKEVM_BRIDGE_DATABASE_PASSWORD=test_password
      - ZKEVM_BRIDGE_DATABASE_NAME=test_db
      - ZKEVM_BRIDGE_DATABASE_HOST=zkevm-bridge-db
      - ZKEVM_BRIDGE_DATABASE_PORT=5432
    volumes:
      - ./config/test.keystore.claimtx:/pk/keystore.claimtxmanager
      - ./config/config.bridge.toml:/app/config.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-bridge run --cfg /app/config.toml"

  zkevm-bridge-ui:
    container_name: zkevm-bridge-ui
    image: zkevm-bridge-ui
    ports:
      - 8090:80
    environment:
      - ETHEREUM_RPC_URL=http://52.41.35.138:8545
      - ETHEREUM_EXPLORER_URL=http://52.41.35.138:4000
      - ETHEREUM_BRIDGE_CONTRACT_ADDRESS=0x88BB44236eC08D7Dc097C40Bd753DF6BF199c457
      - ETHEREUM_FORCE_UPDATE_GLOBAL_EXIT_ROOT=true
      - ETHEREUM_PROOF_OF_EFFICIENCY_CONTRACT_ADDRESS=0x3fBC3dAAF173Ce3185757C5c38622536Ae76fe59
      - POLYGON_ZK_EVM_RPC_URL=http://52.41.35.138:8123
      - POLYGON_ZK_EVM_EXPLORER_URL=http://52.41.35.138:4001
      - POLYGON_ZK_EVM_BRIDGE_CONTRACT_ADDRESS=0x88BB44236eC08D7Dc097C40Bd753DF6BF199c457
      - POLYGON_ZK_EVM_NETWORK_ID=1
      - BRIDGE_API_URL=http://52.41.35.138:8080
      - ENABLE_FIAT_EXCHANGE_RATES=false
      - ENABLE_OUTDATED_NETWORK_MODAL=false
      - ENABLE_DEPOSIT_WARNING=true
      - ENABLE_REPORT_FORM=false
      - USE_FIAT_EXCHANGE_RATES=false
      - SHOW_OUTDATED_NETWORK_MODAL=false

  supernets2-eth-tx-manager:
    container_name: supernets2-eth-tx-manager
    image: supernets2-node
    ports:
      - 9094:9091 # needed if metrics enabled
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
    volumes:
      - ./config/sequencer.keystore:/pk/sequencer.keystore
      - ./config/aggregator.keystore:/pk/aggregator.keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components eth-tx-manager"

  supernets2-sequence-sender:
    container_name: supernets2-sequence-sender
    image: supernets2-node
    environment:
      - SUPERNETS2_NODE_STATEDB_HOST=supernets2-state-db
      - SUPERNETS2_NODE_POOL_DB_HOST=supernets2-pool-db
      - SUPERNETS2_NODE_SEQUENCER_SENDER_ADDRESS=0x28E803c70B44BA4ec2b27fa8b53DFd33d1b9c9b1
    volumes:
      - ./config/sequencer.keystore:/pk/sequencer.keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components sequence-sender"

  supernets2-l2gaspricer:
    container_name: supernets2-l2gaspricer
    image: supernets2-node
    environment:
      - SUPERNETS2_NODE_POOL_DB_HOST=supernets2-pool-db
    volumes:
      - ./config/sequencer.keystore:/pk/keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-node run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components l2gaspricer"

  zkevm-bridge-db:
    container_name: zkevm-bridge-db
    image: postgres
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    expose:
      - 5436
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    command: [ "postgres", "-N", "500" ]

  supernets2-data-availability:
    container_name: supernets2-data-availability
    image: supernets2-data-availability
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ports:
      - 8444:8444
    volumes:
      - ./config/test.da.toml:/app/config.toml
      - ./config/test-member.keystore:/pk/test-member.keystore
    command:
      - "/bin/sh"
      - "-c"
      - "/app/supernets2-data-availability run --cfg /app/config.toml"

  supernets2-data-availability-db:
    container_name: supernets2-data-availability-db
    image: postgres
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=committee_user
      - POSTGRES_PASSWORD=committee_password
      - POSTGRES_DB=committee_db
    command:
      - "postgres"
      - "-N"
      - "500"
